[alias]

	l = log --pretty=oneline -n 20 --graph --abbrev-commit
	st = status -sb
	cl = clone
	co = checkout
	ca = !git add -A && git commit -av
	cm = checkout master
	po = "!git push --set-upstream origin \"$(git rev-parse --abbrev-ref HEAD)\""
	stup = !git stash && git up && git stash apply
	save = !git add -A && git commit -m 'quick save'
	undo = reset --soft HEAD~1
	ac = !git add -A && git commit --amend -C HEAD
	pf = push -f
	acpf = !git ac && git pf
	rekt = reset --hard
	up = !git checkout master && git pull upstream master && git push origin master && git dm
	upd = !git checkout dev && git pull upstream dev && git push origin dev && git dm
	setup = "!f() { git remote add upstream $1 && git fetch --all && git up;}; f"
	cb = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	aliases = config --get-regexp alias
	amend = commit --amend --reuse-message=HEAD
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	reb = "!r() { git rebase -i HEAD~$1; }; r"
	retag = "!r() { git tag -d $1 && git push origin :refs/tags/$1 && git tag $1; }; r"
	dm = "!git branch --merged | grep -v '\\*' | xargs -n 1 git branch -d && git pb"
	contributors = shortlog --summary --numbered
	pb = !git remote prune origin && git remote prune upstream	

[apply]
	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

	# Speed up commands involving untracked files such as `git status`.
	# https://git-scm.com/docs/git-update-index#_untracked_cache
	untrackedCache = true
	editor = micro

[color]
	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]
	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]
	added = yellow
	changed = green
	untracked = cyan

[user]
	name = Bob Laskowski
	email = robert.laskowski@target.com

[https]
	sslCAInfo = ~/tgt-ca-bundle.crt

[core]
	gitproxy = ssh for target.com
	gitproxy = default-proxy
	autocrlf = input

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true
